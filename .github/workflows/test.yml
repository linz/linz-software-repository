name: Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Run pre-commit hooks
        run: nix-shell --pure --run 'pre-commit run --all-files'

  test:
    name: Test building Ubuntu ${{ matrix.release }} container on ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-latest
        release:
          - focal
          - jammy
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.4
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v26

      - name: Build builder image
        run: nix-shell --pure --run 'docker build --tag=docker-builder .'

      - name: Build and run runner image
        run:
          nix-shell --keep GITHUB_REPOSITORY --keep RUNNER_WORKSPACE --pure --run 'docker run
          --env=DRY_RUN=1 --env=GITHUB_REPOSITORY --env=PACKAGECLOUD_REPOSITORY=dev
          --env=PACKAGECLOUD_TOKEN=token --env=PUSH_TO_GIT_REMOTE=origin --env=RUNNER_WORKSPACE
          --volume=/var/run/docker.sock:/var/run/docker.sock docker-builder ${{ matrix.release }}
          "cowsay python3" "$PWD"'

      - name: Verify the release of the runner image
        run:
          nix-shell --pure --run 'docker run --entrypoint=grep linz-deb-builder UBUNTU_CODENAME=${{
          matrix.release }} /etc/os-release'

      - name: Verify the packages on the runner image
        run:
          nix-shell --pure --run 'docker run --entrypoint=bash linz-deb-builder -o pipefail -c
          "python3 -c \"print(\\\"ToitÅ« Te Whenua LINZ\\\")\" | /usr/games/cowthink"'

  finalise:
    if: always()
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
