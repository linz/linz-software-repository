name: Test

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - master
  schedule:
    - cron: '0 12 * * 0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
      - name: Install Nix
        uses: cachix/install-nix-action@v16
      - name: Run pre-commit hooks
        run: nix-shell --pure --run 'pre-commit run --all-files'

  test:
    name: Test building Ubuntu ${{ matrix.release }} container on ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-latest
        release:
          - bionic
          - focal
          - jammy
    env:
      NIX_PATH: 'nixpkgs=https://github.com/NixOS/nixpkgs/archive/a7ecde854aee5c4c7cd6177f54a99d2c1ff28a31.tar.gz'
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v16

      - name: Build builder image
        run: nix-shell --pure --run 'docker build --tag=docker-builder .'

      - name: Build and run runner image
        run:
          nix-shell --keep GITHUB_REPOSITORY --keep RUNNER_WORKSPACE --pure --run 'docker run
          --env=DRY_RUN=1 --env=GITHUB_REPOSITORY --env=PACKAGECLOUD_REPOSITORY=dev
          --env=PACKAGECLOUD_TOKEN=token --env=PUSH_TO_GIT_REMOTE=origin --env=RUNNER_WORKSPACE
          --volume=/var/run/docker.sock:/var/run/docker.sock docker-builder ${{ matrix.release }}
          "$PWD"'

      - name: Verify the release of the runner image
        run:
          nix-shell --pure --run 'docker run --entrypoint=grep linz-deb-builder UBUNTU_CODENAME=${{
          matrix.release }} /etc/os-release'
